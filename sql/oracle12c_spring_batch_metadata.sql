/*
  Oracle 12c Spring Batch 4.x Metadata DDL

  - 스키마명: BATCH
  - 테이블스페이스: BATCH_TS (초기 128MB, AUTOEXTEND)
  - 본 스크립트는 두 섹션으로 구성됩니다.
    1) DBA 섹션: 테이블스페이스/사용자/권한 (관리자 계정으로 실행)
    2) 스키마 섹션: 메타데이터 테이블/시퀀스/인덱스 (BATCH 사용자로 실행)

  주의:
  - 비밀번호는 환경에 맞게 반드시 변경하세요.
  - 1) 실행 후, BATCH 사용자로 접속하여 2)를 실행하세요.
*/

/* =========================
   1) DBA 섹션 (관리자 계정)
   ========================= */

-- Oracle Managed Files(OMF) 환경 예시. OMF 미사용 시 DATAFILE 경로를 지정하세요.
CREATE BIGFILE TABLESPACE BATCH_TS
  DATAFILE SIZE 128M
  AUTOEXTEND ON NEXT 64M MAXSIZE UNLIMITED
  EXTENT MANAGEMENT LOCAL SEGMENT SPACE MANAGEMENT AUTO;

-- 스키마(사용자) 생성: 비밀번호는 변경하세요.
CREATE USER BATCH IDENTIFIED BY "ChangeMe!123"
  DEFAULT TABLESPACE BATCH_TS
  TEMPORARY TABLESPACE TEMP
  QUOTA UNLIMITED ON BATCH_TS;

GRANT CREATE SESSION, CREATE TABLE, CREATE SEQUENCE, CREATE VIEW, CREATE TRIGGER TO BATCH;

/* =========================
   2) 스키마 섹션 (BATCH 사용자)
   ========================= */

-- 아래부터는 BATCH 사용자로 접속하여 실행하십시오.

CREATE TABLE BATCH_JOB_INSTANCE (
  JOB_INSTANCE_ID      NUMBER(19,0)    NOT NULL PRIMARY KEY,
  VERSION              NUMBER(19,0),
  JOB_NAME             VARCHAR2(100)   NOT NULL,
  JOB_KEY              VARCHAR2(32)    NOT NULL,
  CONSTRAINT JOB_INST_UN UNIQUE (JOB_NAME, JOB_KEY)
) TABLESPACE BATCH_TS;

CREATE TABLE BATCH_JOB_EXECUTION (
  JOB_EXECUTION_ID           NUMBER(19,0)  NOT NULL PRIMARY KEY,
  VERSION                    NUMBER(19,0),
  JOB_INSTANCE_ID            NUMBER(19,0)  NOT NULL,
  CREATE_TIME                TIMESTAMP(9)  NOT NULL,
  START_TIME                 TIMESTAMP(9),
  END_TIME                   TIMESTAMP(9),
  STATUS                     VARCHAR2(10),
  EXIT_CODE                  VARCHAR2(250),
  EXIT_MESSAGE               VARCHAR2(2500),
  LAST_UPDATED               TIMESTAMP(9),
  JOB_CONFIGURATION_LOCATION VARCHAR2(2500),
  CONSTRAINT JOB_INST_EXEC_FK FOREIGN KEY (JOB_INSTANCE_ID)
    REFERENCES BATCH_JOB_INSTANCE(JOB_INSTANCE_ID)
) TABLESPACE BATCH_TS;

CREATE TABLE BATCH_JOB_EXECUTION_PARAMS (
  JOB_EXECUTION_ID  NUMBER(19,0)  NOT NULL,
  TYPE_CD           VARCHAR2(6)   NOT NULL,
  KEY_NAME          VARCHAR2(100) NOT NULL,
  STRING_VAL        VARCHAR2(250),
  DATE_VAL          TIMESTAMP(9),
  LONG_VAL          NUMBER(19,0),
  DOUBLE_VAL        NUMBER(19,2),
  IDENTIFYING       CHAR(1)       NOT NULL,
  CONSTRAINT JOB_EXEC_PARAMS_FK FOREIGN KEY (JOB_EXECUTION_ID)
    REFERENCES BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
) TABLESPACE BATCH_TS;

CREATE TABLE BATCH_STEP_EXECUTION (
  STEP_EXECUTION_ID   NUMBER(19,0)  NOT NULL PRIMARY KEY,
  VERSION             NUMBER(19,0)  NOT NULL,
  STEP_NAME           VARCHAR2(100) NOT NULL,
  JOB_EXECUTION_ID    NUMBER(19,0)  NOT NULL,
  START_TIME          TIMESTAMP(9)  NOT NULL,
  END_TIME            TIMESTAMP(9),
  STATUS              VARCHAR2(10),
  COMMIT_COUNT        NUMBER(19,0),
  READ_COUNT          NUMBER(19,0),
  FILTER_COUNT        NUMBER(19,0),
  WRITE_COUNT         NUMBER(19,0),
  READ_SKIP_COUNT     NUMBER(19,0),
  WRITE_SKIP_COUNT    NUMBER(19,0),
  PROCESS_SKIP_COUNT  NUMBER(19,0),
  ROLLBACK_COUNT      NUMBER(19,0),
  EXIT_CODE           VARCHAR2(250),
  EXIT_MESSAGE        VARCHAR2(2500),
  LAST_UPDATED        TIMESTAMP(9),
  CONSTRAINT JOB_EXEC_STEP_FK FOREIGN KEY (JOB_EXECUTION_ID)
    REFERENCES BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
) TABLESPACE BATCH_TS;

CREATE TABLE BATCH_STEP_EXECUTION_CONTEXT (
  STEP_EXECUTION_ID   NUMBER(19,0)  NOT NULL PRIMARY KEY,
  SHORT_CONTEXT       VARCHAR2(2500) NOT NULL,
  SERIALIZED_CONTEXT  CLOB,
  CONSTRAINT STEP_EXEC_CTX_FK FOREIGN KEY (STEP_EXECUTION_ID)
    REFERENCES BATCH_STEP_EXECUTION(STEP_EXECUTION_ID)
) TABLESPACE BATCH_TS;

CREATE TABLE BATCH_JOB_EXECUTION_CONTEXT (
  JOB_EXECUTION_ID    NUMBER(19,0) NOT NULL PRIMARY KEY,
  SHORT_CONTEXT       VARCHAR2(2500) NOT NULL,
  SERIALIZED_CONTEXT  CLOB,
  CONSTRAINT JOB_EXEC_CTX_FK FOREIGN KEY (JOB_EXECUTION_ID)
    REFERENCES BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
) TABLESPACE BATCH_TS;

-- Sequences (Spring Batch는 시퀀스 NEXTVAL을 사용해 ID를 발급합니다)
CREATE SEQUENCE BATCH_JOB_SEQ
  START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;

CREATE SEQUENCE BATCH_JOB_EXECUTION_SEQ
  START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;

CREATE SEQUENCE BATCH_STEP_EXECUTION_SEQ
  START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;

-- Indexes (권장)
CREATE INDEX JOB_INST_EXEC_FK_IDX    ON BATCH_JOB_EXECUTION (JOB_INSTANCE_ID)            TABLESPACE BATCH_TS;
CREATE INDEX JOB_EXEC_PARAMS_FK_IDX  ON BATCH_JOB_EXECUTION_PARAMS (JOB_EXECUTION_ID)    TABLESPACE BATCH_TS;
CREATE INDEX JOB_EXEC_STEP_FK_IDX    ON BATCH_STEP_EXECUTION (JOB_EXECUTION_ID)          TABLESPACE BATCH_TS;
CREATE INDEX STEP_EXEC_CTX_FK_IDX    ON BATCH_STEP_EXECUTION_CONTEXT (STEP_EXECUTION_ID) TABLESPACE BATCH_TS;
CREATE INDEX JOB_EXEC_CTX_FK_IDX     ON BATCH_JOB_EXECUTION_CONTEXT (JOB_EXECUTION_ID)   TABLESPACE BATCH_TS;

/*
 사이징 가이드(권장):
 - 초기: 128MB (AUTOEXTEND ON, NEXT 64MB)
 - 중간 규모(수십만 실행): 512MB
 - 대규모(수백만 실행): 1–2GB
 - 장기 보관 시 정기 purge(오래된 JOB/STEP/EXECUTION/CONTEXT) 권장
*/

